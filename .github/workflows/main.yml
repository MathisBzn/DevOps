name: CI devops 2025 #Nom du workflow
on: #Se déclenche au moment du ...
  push: #push sur ...
    branches: #Les branches qui sont listées ci-dessous.
      - main
      - develop
  pull_request:

jobs: #Lorsqu'il se déclenche, run ces jobs
  build-test:
    name: Build and test
    runs-on: ubuntu-22.04 #Distrib sur laquelle va run le job
    steps: #Les différentes étapes du job. Chacune doit contenir un uses ou un run
      - uses: actions/checkout@v4

      - name: Set up JDK 21 #Nom de l'action
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto' #Distrib du docker sur lequel va run java
          java-version: '21'

      - name: Build and test with Maven
        run: | #run les commandes suivantes unes après les autres.
          cd java/simple-api-student-main
          mvn clean verify

  test-backend:
    name: Sonar
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21 #Java 21
          distribution: 'corretto'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: | #On se déplace dans le bon dossier et on est avec sonar
              cd java/simple-api-student-main 
              mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=MathisBzn_DevOps